{"version":3,"sources":["script.js","swiper.js"],"names":[],"mappingshHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"script.js","sourcesContent":["// メニュー展開時に背景を固定\r\nconst backgroundFix = (bool) => {\r\n  const scrollingElement = () => {\r\n    const browser = window.navigator.userAgent.toLowerCase();\r\n    if (\"scrollingElement\" in document) return document.scrollingElement;\r\n    return document.documentElement;\r\n  };\r\n\r\n  const scrollY = bool\r\n    ? scrollingElement().scrollTop\r\n    : parseInt(document.body.style.top || \"0\");\r\n\r\n  const fixedStyles = {\r\n    height: \"100vh\",\r\n    position: \"fixed\",\r\n    top: `${scrollY * -1}px`,\r\n    left: \"0\",\r\n    width: \"100vw\"\r\n  };\r\n\r\n  Object.keys(fixedStyles).forEach((key) => {\r\n    document.body.style[key] = bool ? fixedStyles[key] : \"\";\r\n  });\r\n\r\n  if (!bool) {\r\n    window.scrollTo(0, scrollY * -1);\r\n  }\r\n};\r\n\r\n// 変数定義\r\nconst CLASS = \"-active\";\r\nlet flg = false;\r\nlet accordionFlg = false;\r\n\r\nlet humberger = document.getElementById(\"js-humberger\");\r\nlet focusTrap = document.getElementById(\"js-focus-trap\");\r\nlet menu = document.querySelector(\".js-nav-area\");\r\nlet accordionTrigger = document.querySelectorAll(\".js-sp-accordion-trigger\");\r\nlet accordion = document.querySelectorAll(\".js-sp-accordion\");\r\nlet menuList = document.getElementsByClassName(\"js-menu-link\");\r\nconsole.log(menuList);\r\n\r\n// メニュー開閉制御\r\nhumberger.addEventListener(\"click\", (e) => { //ハンバーガーボタンが選択されたら\r\n  e.currentTarget.classList.toggle(CLASS);\r\n  menu.classList.toggle(CLASS);\r\n  if (flg) {// flgの状態で制御内容を切り替え\r\n    // backgroundFix(false);\r\n    humberger.setAttribute(\"aria-expanded\", \"false\");\r\n    humberger.focus();\r\n    flg = false;\r\n  } else {\r\n    // backgroundFix(true);\r\n    humberger.setAttribute(\"aria-expanded\", \"true\");\r\n    flg = true;\r\n  }\r\n});\r\n//メニューのリストがクリックされたらメニューを閉じる\r\nfor (let i = 0; i < menuList.length; i++) {\r\n  menuList[i].addEventListener(\"click\", (e) => {\r\n    humberger.classList.toggle(CLASS);\r\n    menu.classList.toggle(CLASS);\r\n    if (flg) {// flgの状態で制御内容を切り替え\r\n      // backgroundFix(false);\r\n      humberger.setAttribute(\"aria-expanded\", \"false\");\r\n      humberger.focus();\r\n      flg = false;\r\n    } else {\r\n      // backgroundFix(true);\r\n      humberger.setAttribute(\"aria-expanded\", \"true\");\r\n      flg = true;\r\n    }\r\n  });\r\n}\r\n\r\nwindow.addEventListener(\"keydown\", () => { //escキー押下でメニューを閉じられるように\r\n  if (event.key === \"Escape\") {\r\n    humberger.classList.remove(CLASS);\r\n    menu.classList.remove(CLASS);\r\n\r\n    // backgroundFix(false);\r\n    humberger.focus();\r\n    humberger.setAttribute(\"aria-expanded\", \"false\");\r\n    flg = false;\r\n  }\r\n});\r\n\r\n// メニュー内アコーディオン制御\r\naccordionTrigger.forEach((item) => {\r\n  item.addEventListener(\"click\", (e) => {\r\n    e.currentTarget.classList.toggle(CLASS);\r\n    e.currentTarget.nextElementSibling.classList.toggle(CLASS);\r\n    if (accordionFlg) {\r\n      e.currentTarget.setAttribute(\"aria-expanded\", \"false\");\r\n      accordionFlg = false;\r\n    } else {\r\n      e.currentTarget.setAttribute(\"aria-expanded\", \"true\");\r\n      accordionFlg = true;\r\n    }\r\n  });\r\n\r\n});\r\n\r\n// フォーカストラップ制御\r\nfocusTrap.addEventListener(\"focus\", (e) => {\r\n  humberger.focus();\r\n});\r\n\r\n\r\n//jQuery記述\r\n\r\njQuery(function ($) {\r\n});","// //Swiper本体とモジュールを読み込む\r\n// import Swiper, { Navigation, Pagination, Autoplay } from 'swiper';\r\n\r\n// // Swiper本体とモジュールのスタイル読み込み\r\n// import 'swiper/css';\r\n// import 'swiper/css/navigation';\r\n// import 'swiper/css/pagination';\r\n\r\n// const Slideshow = () => {\r\n\r\n//   const option = {\r\n//     //モジュールを使う\r\n//     modules: [Navigation, Pagination, Autoplay],\r\n//     loop: true,\r\n//     slidesPerView: 1,\r\n//     speed: 1000,\r\n//     //autoplayとかpaginationとかが使えるようになる\r\n//     autoplay: {\r\n//       delay: 5000,\r\n//     },\r\n//     pagination: {\r\n//       el: '.swiper-pagination',\r\n//     },\r\n//     navigation: {\r\n//       nextEl: '.swiper-button-next',\r\n//       prevEl: '.swiper-button-prev',\r\n//     },\r\n//   }\r\n\r\n//   const swiper = new Swiper('.swiper', option);\r\n// }\r\n// export default Slideshow;\r\n\r\nconst swiper = new Swiper('.swiper', {\r\n  // Optional parameters\r\n  // direction: 'vertical',\r\n  loop: true,\r\n\r\n  // If we need pagination\r\n  pagination: {\r\n    el: '.swiper-pagination',\r\n  },\r\n\r\n  // Navigation arrows\r\n  navigation: {\r\n    nextEl: '.swiper-button-next',\r\n    prevEl: '.swiper-button-prev',\r\n  },\r\n\r\n  // And if we need scrollbar\r\n  scrollbar: {\r\n    el: '.swiper-scrollbar',\r\n  },\r\n});"]}